"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1137],{4781:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=s(4848),t=s(8453);const i={sidebar_position:2,title:"Cheat Sheet"},a=void 0,r={id:"troubleshooting-basics/cheat-sheet",title:"Cheat Sheet",description:"Metrics",source:"@site/docs/troubleshooting-basics/cheat-sheet.md",sourceDirName:"troubleshooting-basics",slug:"/troubleshooting-basics/cheat-sheet",permalink:"/hands-on-containers/troubleshooting-basics/cheat-sheet",draft:!1,unlisted:!1,editUrl:"https://github.com/armagankaratosun/hands-on-containers/tree/main/packages/create-docusaurus/templates/shared/docs/troubleshooting-basics/cheat-sheet.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Cheat Sheet"},sidebar:"tutorialSidebar",previous:{title:"Scenario 1: Why My Containers are CrashLooping",permalink:"/hands-on-containers/troubleshooting-basics/scenario-1"},next:{title:"Solutions",permalink:"/hands-on-containers/category/solutions"}},c={},l=[{value:"Metrics",id:"metrics",level:2},{value:"Logs",id:"logs",level:2},{value:"Options for logs",id:"options-for-logs",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Debugging",id:"debugging",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"metrics",children:"Metrics"}),"\n",(0,o.jsx)(n.p,{children:"To view resource usage metrics for nodes or pods:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl top [node-name | pod-name]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"logs",children:"Logs"}),"\n",(0,o.jsx)(n.p,{children:"Retrieve logs from a specific pod:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl logs [pod-name]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"options-for-logs",children:"Options for logs"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Follow Logs:"})," Stream logs from a pod in real-time."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl logs -f [pod-name]\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Tail Logs:"})," View the last 'n' lines of logs from a pod."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl logs --tail=20 [pod-name]\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Specific Container:"})," If a pod contains more than one container, specify which container's logs to retrieve."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl logs [pod-name] -c [container-name]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.p,{children:"Describe a pod in detail. Useful for diagnosing issues:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl describe pod [pod-name] (-o wide | -o yaml)\n"})}),"\n",(0,o.jsx)(n.p,{children:"List a specific pod with extended information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl get pod [pod-name] -o wide\n"})}),"\n",(0,o.jsx)(n.p,{children:"List a deployment with extended information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl get deployment [deployment-name] -o wide\n"})}),"\n",(0,o.jsx)(n.p,{children:"View events in a specific namespace:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl get events -n [namespace]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,o.jsx)(n.p,{children:"Open an interactive shell to a running container:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl exec [pod-name] -it -- sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"Create a temporary copy of a pod and open an interactive shell to help with debugging (including tools):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl debug [pod-name] -it --copy-to=debug-pod --container=myapp --image=busybox -- sh\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var o=s(6540);const t={},i=o.createContext(t);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);