"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6012],{5677:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(4848),a=t(8453);const r={sidebar_position:3,title:"Exposing Services via Ingress"},i=void 0,o={id:"kubernetes-basics/kubernetes-advanced/service-ingress",title:"Exposing Services via Ingress",description:"Source code: k8s-getting-started GitHub Repository",source:"@site/docs/kubernetes-basics/kubernetes-advanced/service-ingress.md",sourceDirName:"kubernetes-basics/kubernetes-advanced",slug:"/kubernetes-basics/kubernetes-advanced/service-ingress",permalink:"/hands-on-containers/kubernetes-basics/kubernetes-advanced/service-ingress",draft:!1,unlisted:!1,editUrl:"https://github.com/armagankaratosun/hands-on-containers/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes-basics/kubernetes-advanced/service-ingress.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Exposing Services via Ingress"},sidebar:"tutorialSidebar",previous:{title:"Exposing Services via Loadbalancer",permalink:"/hands-on-containers/kubernetes-basics/kubernetes-advanced/service-loadbalancer"},next:{title:"Liveness and Readiness Probes",permalink:"/hands-on-containers/kubernetes-basics/kubernetes-advanced/liveness-readiness-probes"}},c={},d=[{value:"Deploy the application (if you dont already)",id:"deploy-the-application-if-you-dont-already",level:2},{value:"Example Output",id:"example-output",level:3},{value:"Create a ClusterIP Service",id:"create-a-clusterip-service",level:2},{value:"Create an Ingress to Reverse Proxy your ClusterIP service",id:"create-an-ingress-to-reverse-proxy-your-clusterip-service",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Source code: ",(0,s.jsx)(n.a,{href:"https://github.com/armagankaratosun/k8s-getting-started",children:"k8s-getting-started GitHub Repository"})]}),"\n",(0,s.jsx)(n.p,{children:"You can copy/paste the YAML manifests from this guide, or clone the repository to edit and use the manifests directly."}),"\n",(0,s.jsx)(n.h2,{id:"deploy-the-application-if-you-dont-already",children:"Deploy the application (if you dont already)"}),"\n",(0,s.jsxs)(n.p,{children:["Below are the YAML manifests for a Kubernetes Deployment using a demo container image. (Located at ",(0,s.jsx)(n.code,{children:"Deployments/deployment.yaml"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: k8s-getting-started\n  labels:\n    app: k8s-getting-started\nspec:\n  replicas: 5\n  strategy:\n    type: Recreate # Specifies the strategy type as "Recreate", meaning that pods will be updated all at once\n  selector:\n    matchLabels:\n      app: k8s-getting-started\n  template:\n    metadata:\n      labels:\n        app: k8s-getting-started\n    spec:\n      containers:\n        - name: k8s-getting-started\n          image: armagankaratosun/k8s-getting-started:v1\n          ports:\n            - containerPort: 8080\n'})}),"\n",(0,s.jsx)(n.p,{children:"Apply the Initial Deployment\nTo deploy, run:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"kubectl apply -f deployment.yaml -n <your-namespace>"})}),"\n",(0,s.jsx)(n.h3,{id:"example-output",children:"Example Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"armagan@ ~ $ kubectl apply -f k8s-getting-started/Deployments/deployment.yaml -n <your-namespace>\ndeployment.apps/k8s-getting-started created\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can list the available pods"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"armagan@ ~ $ kubectl get pods -n <your-namespace>\n\nNAME                                   READY   STATUS    RESTARTS   AGE\nk8s-getting-started-6697dbc867-9r49d   1/1     Running   0          31s\nk8s-getting-started-6697dbc867-rfm25   1/1     Running   0          32s\nk8s-getting-started-6697dbc867-tjr4w   1/1     Running   0          32s\nk8s-getting-started-6697dbc867-w5jbb   1/1     Running   0          31s\nk8s-getting-started-6697dbc867-zrp2z   1/1     Running   0          32s\n"})}),"\n",(0,s.jsx)(n.h2,{id:"create-a-clusterip-service",children:"Create a ClusterIP Service"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: k8s-getting-started-service\nspec:\n  selector:\n    app: k8s-getting-started\n  ports:\n    - protocol: TCP\n      port: 8080\n      targetPort: 8080\n  type: ClusterIP\n"})}),"\n",(0,s.jsx)(n.h2,{id:"create-an-ingress-to-reverse-proxy-your-clusterip-service",children:"Create an Ingress to Reverse Proxy your ClusterIP service"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: k8s-getting-started-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /  # Ensures paths are properly routed to the service\nspec:\n  rules:\n  - host: "<yourname>.<yourdomain>.com"  # Replace <yourname>.<yourdomain>.com with your specific domain\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: k8s-getting-started-service  # The name of the ClusterIP service for your app\n            port:\n              number: 8080  # Port of the service as defined in the service.yaml file\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);