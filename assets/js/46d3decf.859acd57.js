"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[496],{820:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=a(4848),o=a(8453);const s={sidebar_position:2,title:"Managing Named Mounts"},i=void 0,l={id:"container-basics/docker-advanced/docker-volumes/managing-named-volumes",title:"Managing Named Mounts",description:"(Named) Volumes",source:"@site/docs/container-basics/docker-advanced/docker-volumes/managing-named-volumes.md",sourceDirName:"container-basics/docker-advanced/docker-volumes",slug:"/container-basics/docker-advanced/docker-volumes/managing-named-volumes",permalink:"/hands-on-containers/container-basics/docker-advanced/docker-volumes/managing-named-volumes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/container-basics/docker-advanced/docker-volumes/managing-named-volumes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Managing Named Mounts"},sidebar:"tutorialSidebar",previous:{title:"Managing Bind Mounts",permalink:"/hands-on-containers/container-basics/docker-advanced/docker-volumes/managing-bind-volumes"},next:{title:"Using Volume Drivers",permalink:"/hands-on-containers/container-basics/docker-advanced/docker-volumes/using-volume-drivers"}},r={},c=[{value:"(Named) Volumes",id:"named-volumes",level:2},{value:"Create Volume",id:"create-volume",level:3},{value:"List Volumes",id:"list-volumes",level:3},{value:"Remove a Volume",id:"remove-a-volume",level:3},{value:"Start Container with a volume",id:"start-container-with-a-volume",level:3},{value:"What just happened?",id:"what-just-happened",level:4},{value:"Check Data inside the container",id:"check-data-inside-the-container",level:3},{value:"Using <code>docker inspect</code> to verify the Volume",id:"using-docker-inspect-to-verify-the-volume",level:3},{value:"What just happened?",id:"what-just-happened-1",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"named-volumes",children:"(Named) Volumes"}),"\n",(0,t.jsxs)(n.p,{children:["Named volumes are specifically designed to persist data generated and used by containers. While ",(0,t.jsx)(n.a,{href:"managing-bind-volumes",children:"bind volumes"})," are relatively easier to get start with, Volumes offer several key advantages:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Volumes can be created and managed using Docker CLI commands or the Docker API."}),"\n",(0,t.jsx)(n.li,{children:"Volumes are easier to back up or migrate compared to bind mounts."}),"\n",(0,t.jsx)(n.li,{children:"Volume drivers let you use remote storage servers and can be more safely shared among multiple containers"}),"\n",(0,t.jsx)(n.li,{children:"New volumes can have their content pre-populated by a container."}),"\n"]}),"\n",(0,t.jsx)("div",{style:{textAlign:"left"},children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Docker Named Volume",src:a(1526).A+"",width:"664",height:"400"})})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Source"}),": ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/engine/storage/volumes/",children:"Docker Volume Documentation"})]}),"\n",(0,t.jsx)(n.h3,{id:"create-volume",children:"Create Volume"}),"\n",(0,t.jsxs)(n.p,{children:["To create a named volume, use the ",(0,t.jsx)(n.code,{children:"docker volume create"})," command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker volume create my-first-volume\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This creates a volume named ",(0,t.jsx)(n.code,{children:"my-first-volume"}),", which Docker will store in its internal storage directory."]}),"\n",(0,t.jsx)(n.h3,{id:"list-volumes",children:"List Volumes"}),"\n",(0,t.jsx)(n.p,{children:"To view all volumes, use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker volume ls\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example output:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"armagan@ ~/python-docker-example (main?) $ docker volume ls\nDRIVER    VOLUME NAME\nlocal     my-first-volume\n"})}),"\n",(0,t.jsx)(n.h3,{id:"remove-a-volume",children:"Remove a Volume"}),"\n",(0,t.jsx)(n.p,{children:"If a volume is no longer in use, you can remove it with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker volume rm my-first-volume\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Be cautious: removing a volume deletes all data stored in it. Make sure it\u2019s no longer attached to any containers."})}),"\n",(0,t.jsx)(n.h3,{id:"start-container-with-a-volume",children:"Start Container with a volume"}),"\n",(0,t.jsx)(n.p,{children:"Now, let\u2019s start a container and attach it to the named volume we created."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run -d \\\n  --name my-first-container-with-named-volume \\\n  --mount source=my-first-volume,target=/app/data \\\n  my-first-image:v1 \\\n  sh -c \"echo 'Hello, Docker Volume' > /app/data/hello.txt\"\n"})}),"\n",(0,t.jsx)(n.h4,{id:"what-just-happened",children:"What just happened?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--mount source=my-first-volume,target=/app/data:"})," Attaches the ",(0,t.jsx)(n.code,{children:"my-first-volume"})," volume to the ",(0,t.jsx)(n.code,{children:"/app/data"})," directory in the container. Any data written in the container will persist in the volume."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sh -c \"echo 'Hello, Docker Volume' > /app/data/hello.txt\""}),': Writes "Hello, Docker Volume" to a file in the volume.']}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"check-data-inside-the-container",children:"Check Data inside the container"}),"\n",(0,t.jsx)(n.p,{children:"To confirm that the bind mount is working, execute a shell inside the container and view the data:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker exec -it my-first-container-with-volume bash\n"})}),"\n",(0,t.jsx)(n.p,{children:"Once inside the container, list the contents of the /app/data directory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ls /app/data\ncat /app/data/hello.txt\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should see hello.txt and its contents (Hello from the host), confirming the host directory is successfully mounted."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"app@3deeb1c8f37f:/app$ ls /app/data/\nhello.txt\napp@3deeb1c8f37f:/app$ cat /app/data/hello.txt\nHello from the host\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Run ",(0,t.jsx)(n.code,{children:"CTRL+D"})," to exit from container shell."]}),"\n",(0,t.jsxs)(n.h3,{id:"using-docker-inspect-to-verify-the-volume",children:["Using ",(0,t.jsx)(n.code,{children:"docker inspect"})," to verify the Volume"]}),"\n",(0,t.jsx)(n.p,{children:"To see detailed information about a specific volume, use:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker volume inspect my-first-volume\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example output:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "CreatedAt": "2024-10-30T00:11:03Z",\n        "Driver": "local",\n        "Labels": null,\n        "Mountpoint": "/var/lib/docker/volumes/my-first-volume/_data",\n        "Name": "my-first-volume",\n        "Options": null,\n        "Scope": "local"\n    }\n]\n'})}),"\n",(0,t.jsx)(n.h4,{id:"what-just-happened-1",children:"What just happened?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"CreatedAt:"})," Indicates the exact time when the volume was created, in UTC (Coordinated Universal Time)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Driver:"})," Shows the storage driver used for the volume, which is ",(0,t.jsx)(n.code,{children:"local"})," by default. The local driver stores the volume on the host machine, typically in Docker\u2019s storage directory."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Mountpoint:"})," Specifies the exact path on the host where the volume data is stored. In this example, it\u2019s located in Docker's storage area at ",(0,t.jsx)(n.code,{children:"/var/lib/docker/volumes/my-first-volume/_data"}),". This path is where all data for the volume is physically stored on the host."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Scope:"})," Defines the scope of the volume. ",(0,t.jsx)(n.code,{children:"local"})," means it\u2019s specific to the local Docker engine, and it is only accessible to containers on this host."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1526:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/docker_volume-428f0eb9da94eaf5c943195df9016637.png"},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);